<%@ jet package="com.porpoise.api.generator.templates" imports="java.util.* com.porpoise.generator.model.*  com.porpoise.dao.generator.model.api.* com.porpoise.dao.generator.gen.* com.porpoise.generator.* com.porpoise.api.generator.gen.*" class="AccessorTemplate"  
skeleton="generator.skeleton" %><% final ApiContext ctxt = (ApiContext) argument;
final String n = ctxt.getJavaName(); 
%>
package <%= ctxt.getPackageName() %>;

import java.util.*;

/**
 */
public interface I<%= n %>
{
<% for (final IField f : ctxt.getDomainObject().getPrimitiveFields()) { %>
    /**
     * @return <%= f.getNameAsProperty() %>
     */
<% if (f.isByteArray()) { %>
    public Collection<Byte> <%= f.getNameAsAccessor() %>();
<% } else { %>
    public <%= f.getJavaTypeName() %> <%= f.getNameAsAccessor() %>();
<% } %>
<%}  // end for %>

<% for (final DomainObjectField f : ctxt.getDomainObject().getObjectFields()) { 
if (!f.getType().hasIdField()) {
    continue;
}
%>
    /**
     * @return <%= f.getNameAsProperty() %>
     */
    public <%= ctxt.getJavaKeyTypeForField(f) %> <%= f.getNameAsAccessor() %>Id();
<%}  // end for %>

<% for (final IField f : ctxt.getListFields()) { 
DomainObjectField dof = (DomainObjectField)f;
if (!dof.getType().hasIdField())
{
    continue;
}
%>
    /**
     * @return <%= f.getNameAsProperty() %>
     */
    public Collection<<%= ctxt.getJavaKeyTypeForField(f) %>> <%= f.getNameAsAccessor() %>Ids();
<%} // end for %>
}
