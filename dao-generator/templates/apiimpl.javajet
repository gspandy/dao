<%@ jet package="com.porpoise.dao.generator.templates" imports="com.porpoise.generator.* java.util.* com.porpoise.dao.generator.gen.* com.porpoise.dao.generator.model.*" class="DaoApiImplTemplate" 
skeleton="generator.skeleton" %><% final DaoContext ctxt = (DaoContext) argument; 
final String n = ctxt.getJavaName();
%>
package <%= ctxt.getPackageName() %>.impl;

import <%= ctxt.getPackageName() %>.*;
import <%= ctxt.getPackageName() %>.service.*;
import <%= ctxt.getPackageName() %>.domain.*;
import <%= ctxt.getPackageName() %>.model.*;
import java.util.*;
import com.google.common.collect.Lists;
import com.porpoise.dao.database.DbConnectionFactory;
import com.porpoise.dao.database.IDbTransaction;

/**
 * 
 */
public class <%= n %>ServiceImpl extends AbstractDaoService<<%= ctxt.getIdField().getJavaTypeName() %>, I<%= n %>, <%= n %>Dao> implements I<%= n %>AccessorService
{
    /**
     *
     */
    public <%= n %>ServiceImpl(final DbConnectionFactory factory)
    {
        super(factory, new <%= n %>Dao());
    }

    /**
     * @return an object for the given key
     */
    protected I<%= n %> getInternal(final <%= ctxt.getIdField().getJavaTypeName() %> id, final IDbTransaction tx)
    {
        return getDomainObjects().get<%= n %>(id, tx);
	}
}
